version: '3.7'
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__CORE__ENABLE_XCOM_PICKLING=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER__RBAC=False
  - AIRFLOW_CONN_METABASE_POSTGRES=postgresql+psycopg2://metabase:metabase@metabase_postgres:5432/metabase
  - AIRFLOW_CONN_AWS_CONN=${AWS_CONN}
  
x-airflow-image: &airflow_image apache/airflow:2.6.3-python3.8
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:

  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
  
  init:
    build:
      context: .
      dockerfile: Dockerfile_airflow
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c 'airflow db upgrade && sleep 5 && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'
  
  webserver:
    build:
      context: .
      dockerfile: Dockerfile_airflow
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver
  
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile_airflow
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - logs:/opt/airflow/logs
      - ./data:/data
      - ./model:/model
      - ./pickle:/pickle
    environment: *airflow_environment
    command: scheduler
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  metabase_postgres:
    build:
      context: .
      dockerfile: Dockerfile_metabase
    environment:
      - POSTGRES_USER=metabase
      - POSTGRES_PASSWORD=metabase
      - POSTGRES_DB=metabase
    ports:
      - "5439:5432"
    depends_on:
      - scheduler
    volumes:
      - ./metabase-data:/app/data

  metabase:
    image: metabase/metabase
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=metabase
      - MB_DB_PASS=metabase
      - MB_DB_HOST=metabase_postgres
    depends_on:
      - metabase_postgres
    ports:
      - "3000:3000"
    volumes:
      - ./metabase-data:/app/data

volumes:
  data:
  model:
  logs:
